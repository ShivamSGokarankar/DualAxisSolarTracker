#include<Servo.h>
#include <LiquidCrystal.h>

  LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
  const unsigned long eventTime_1 = 500; 
  unsigned long previousTime_1 = 0;

  Servo horizontal; 
  Servo vertical; 
  int servoh =180;
  int servov = 45;  
  int servohLimitHigh = 180;
  int servohLimitLow = 0;
  int servovLimitHigh = 150;
  int servovLimitLow = 30;
  int ldrlt = 0; 
  int ldrrt = 1; 
  int ldrld = 2; 
  int ldrrd = 3; 

  byte Hand[] = {
    B00100,
    B00100,
    B00100,
    B01110,
    B01110,
    B11111,
    B11011,
    B10001
  };

void setup()
  { 
    Serial.begin(9600);
    lcd.begin(16, 2);
    lcd.createChar(0,Hand);
    lcd.setCursor(0,0);
    lcd.write(byte(0));
    lcd.print("   WELCOME   ");
    lcd.setCursor(15,0);
    lcd.write(byte(0));
      delay(4000);
    
    lcd.setCursor(0,0);
    lcd.print("   DUAL  AXIS  ");
    lcd.setCursor(0,1);
    lcd.print(" SOLAR  TRACKER ");
      delay(5000);
      lcd.clear();
  
    lcd.print("Loading");
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
    lcd.print(".");
      delay(500);
      lcd.clear();
  
    
    horizontal.attach(9);
    vertical.attach(10);
    horizontal.write(180);
    vertical.write(0);
    delay(1000);
  }

void loop() 
  { 
    
      int lt = analogRead(ldrlt); // top left
      int rt = analogRead(ldrrt); // top right
      int ld = analogRead(ldrld); // down left
      int rd = analogRead(ldrrd); // down right
      int avg = (lt + rt + ld + rd)/4;
      double avgp=avg;
      unsigned long currentTime = millis();
       
              if( currentTime - previousTime_1 >= eventTime_1 )
              {
                              
                   lcd.clear();
                   lcd.setCursor(0,0);
                   lcd.print("  SOLAR  PANEL  ");
                   double le = (avgp/1023)*100;
                   int  level = le;
                   lcd.setCursor(0,1);
                   lcd.print("LIGHT LEVEL :");
                   lcd.print(level);
                   lcd.print("%");
                   previousTime_1 = currentTime;
               }
                  
      int dtime = 10; int tol = 50;
      
      int avt = (lt + rt) / 2; // average  top
      int avd = (ld + rd) / 2; // average  down
      int avl = (lt + ld) / 2; // average  left
      int avr = (rt + rd) / 2; // average  right
      
      int dvert = avt - avd; // diffirence of up and down
      int dhoriz = avl - avr;// diffirence og left and rigt
  
      if (-1*tol > dvert || dvert > tol) //  if the diffirence is in the tolerance else change vertical angle
         {
            if (avt > avd)
               {
                 servov = ++servov;
                    if (servov > servovLimitHigh)
                       {
                         servov = servovLimitHigh;
                       }
               }
            else if (avt < avd)
               {
                 servov= --servov;
                    if (servov < servovLimitLow)
                       {
                         servov = servovLimitLow;
                       }
               }
           vertical.write(servov);
         }
      
      if (-1*tol > dhoriz || dhoriz > tol) // check if the diffirence is in the tolerance else change horizontal angle
         {
            if (avl > avr)
              {
                servoh = --servoh;
                   if (servoh < servohLimitLow)
                      {
                        servoh = servohLimitLow;
                      }
              }
            else if (avl < avr)
              {
                servoh = ++servoh;
                   if (servoh > servohLimitHigh)
                      {
                        servoh = servohLimitHigh;
                      }
              }
            else if (avl = avr)
              {
              // nothing
              }
           horizontal.write(servoh);
         }
  
            
            delay(dtime);
            if(avg>10)
            {
              Serial.write(avg);
              Serial.write("\n");
            }
  }
